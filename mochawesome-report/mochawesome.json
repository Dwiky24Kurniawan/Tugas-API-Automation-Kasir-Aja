{
  "stats": {
    "suites": 7,
    "tests": 36,
    "passes": 36,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-19T03:46:11.984Z",
    "end": "2023-06-19T03:46:17.686Z",
    "duration": 5702,
    "testsRegistered": 36,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "966919d2-6682-493e-8831-6f5b3930f48e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 656,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "request(baseUrl)\n    .post('/authentications')\n    .send(userLogin)\n    .end(function (err, res) {\n        token = res.body.data.accessToken\n        if (err) {\n            throw err\n        }\n        done()\n    })",
          "err": {},
          "uuid": "637e35bd-80fb-4616-afce-5d56d34c45b9",
          "parentUUID": "966919d2-6682-493e-8831-6f5b3930f48e",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d04ff2c6-197b-4db2-bc6b-7556210c4c53",
          "title": "Test Endpoint Registration /registration and Login /authentications",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create user registration",
              "fullTitle": "Test Endpoint Registration /registration and Login /authentications Create user registration",
              "timedOut": false,
              "duration": 427,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/registration')\n    .send(userRegistration)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Toko berhasil didaftarkan')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(userRegistration.name)\n        expect(response.body.data.email).not.to.be.null\n        expect(response.body.data.email).to.be.equal(userRegistration.email)\n        expect(response.body.data.password).not.to.be.null\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "bb863cb6-ee7e-43d8-a444-dc6a9e8131d0",
              "parentUUID": "d04ff2c6-197b-4db2-bc6b-7556210c4c53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success login",
              "fullTitle": "Test Endpoint Registration /registration and Login /authentications Success login",
              "timedOut": false,
              "duration": 447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/authentications')\n    .send(userLogin)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Authentication berhasil ditambahkan')\n        expect(response.body.data.accessToken).not.to.be.null\n        expect(response.body.data.refreshToken).not.to.be.null\n        expect(response.body.data.user.id).not.to.be.null\n        expect(response.body.data.user.name).not.to.be.null\n        expect(response.body.data.user.name).to.be.equal(userRegistration.name)\n        expect(response.body.data.user.role).not.to.be.null\n        expect(response.body.data.user.role).to.be.equal('admin')\n        expect(response.body.data.user.email).not.to.be.null\n        expect(response.body.data.user.email).to.be.equal(userRegistration.email)\n        expect(response.body.data.user.company_name).not.to.be.null\n        expect(response.body.data.user.company_name).to.be.equal(userRegistration.name)\n        officeId = response.body.data.user.officeId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "4be7c420-71eb-4127-8460-2afbdf25eebc",
              "parentUUID": "d04ff2c6-197b-4db2-bc6b-7556210c4c53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb863cb6-ee7e-43d8-a444-dc6a9e8131d0",
            "4be7c420-71eb-4127-8460-2afbdf25eebc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 874,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9084d321-6ef3-46b8-bcee-250673a78ff5",
          "title": "Test Endpoint User /users",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success create user",
              "fullTitle": "Test Endpoint User /users Success create user",
              "timedOut": false,
              "duration": 423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/users')\n    .send(createUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil ditambahkan')\n        expect(response.body.data.userId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(createUser.name)\n        userId = response.body.data.userId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "4f435e81-0716-489e-927d-e4708ad84df6",
              "parentUUID": "9084d321-6ef3-46b8-bcee-250673a78ff5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get user detail",
              "fullTitle": "Test Endpoint User /users Success get user detail",
              "timedOut": false,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/users/' + userId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.user.id).not.to.be.null\n        expect(response.body.data.user.name).not.to.be.null\n        expect(response.body.data.user.name).to.be.equal(createUser.name)\n        expect(response.body.data.user.email).not.to.be.null\n        expect(response.body.data.user.email).to.be.equal(createUser.email)\n        expect(response.body.data.user.role).not.to.be.null\n        expect(response.body.data.user.role).to.be.equal('kasir')\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "eb9ed415-0442-4615-95ed-bfd76d9983fb",
              "parentUUID": "9084d321-6ef3-46b8-bcee-250673a78ff5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get user list",
              "fullTitle": "Test Endpoint User /users Success get user list",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/users')\n    .query({\n        q: 'kasir',\n        p: 1\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "7a77c9ba-51e3-4c58-b9cb-6673747c8005",
              "parentUUID": "9084d321-6ef3-46b8-bcee-250673a78ff5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update user",
              "fullTitle": "Test Endpoint User /users Success update user",
              "timedOut": false,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/users/' + userId)\n    .send(updateUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateUser.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil diupdate')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "13a8b601-b9f2-4453-8206-cca05a064fdc",
              "parentUUID": "9084d321-6ef3-46b8-bcee-250673a78ff5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete user",
              "fullTitle": "Test Endpoint User /users Success delete user",
              "timedOut": false,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/users/' + userId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil dihapus')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "2ab8e22a-9776-4a35-b1a2-84b4d1731acd",
              "parentUUID": "9084d321-6ef3-46b8-bcee-250673a78ff5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f435e81-0716-489e-927d-e4708ad84df6",
            "eb9ed415-0442-4615-95ed-bfd76d9983fb",
            "7a77c9ba-51e3-4c58-b9cb-6673747c8005",
            "13a8b601-b9f2-4453-8206-cca05a064fdc",
            "2ab8e22a-9776-4a35-b1a2-84b4d1731acd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 823,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e431ad2b-d234-46b1-8670-7a854b0367e7",
          "title": "Test Endpoint Unit /units",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add unit",
              "fullTitle": "Test Endpoint Unit /units Success add unit",
              "timedOut": false,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/units')\n    .send(addUnit)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Unit berhasil ditambahkan')\n        expect(response.body.data.unitId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addUnit.name)\n        unitId = response.body.data.unitId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "91a5d545-1ed7-4ce3-81d3-a076cd7a4711",
              "parentUUID": "e431ad2b-d234-46b1-8670-7a854b0367e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get unit detail",
              "fullTitle": "Test Endpoint Unit /units Success get unit detail",
              "timedOut": false,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/units/' + unitId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.unit.name).not.to.be.null\n        expect(response.body.data.unit.name).to.be.equal(addUnit.name)\n        expect(response.body.data.unit.description).not.to.be.null\n        expect(response.body.data.unit.description).to.be.equal(addUnit.description)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "b4cd43c7-be6f-4f65-9e73-bc0a72f1a24d",
              "parentUUID": "e431ad2b-d234-46b1-8670-7a854b0367e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get unit list",
              "fullTitle": "Test Endpoint Unit /units Success get unit list",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/units')\n    .query({\n        q: 'gram',\n        page: 1\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "56013b49-57ba-4a3b-9f38-b88c71871916",
              "parentUUID": "e431ad2b-d234-46b1-8670-7a854b0367e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update unit",
              "fullTitle": "Test Endpoint Unit /units Success update unit",
              "timedOut": false,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/units/' + unitId)\n    .send(updateUnit)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateUnit.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "ec83c6f1-eca7-440f-859b-bd63b99fca57",
              "parentUUID": "e431ad2b-d234-46b1-8670-7a854b0367e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete unit",
              "fullTitle": "Test Endpoint Unit /units Success delete unit",
              "timedOut": false,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/units/' + unitId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "fa62bc38-0d73-40e6-a8ea-57d302ef21ff",
              "parentUUID": "e431ad2b-d234-46b1-8670-7a854b0367e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91a5d545-1ed7-4ce3-81d3-a076cd7a4711",
            "b4cd43c7-be6f-4f65-9e73-bc0a72f1a24d",
            "56013b49-57ba-4a3b-9f38-b88c71871916",
            "ec83c6f1-eca7-440f-859b-bd63b99fca57",
            "fa62bc38-0d73-40e6-a8ea-57d302ef21ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 505,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "80a53364-7f31-431c-874f-f36fc542bee5",
          "title": "Test Endpoint Category /categories",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add category",
              "fullTitle": "Test Endpoint Category /categories Success add category",
              "timedOut": false,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/categories')\n    .send(addCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.data.categoryId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCategory.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Category berhasil ditambahkan')\n        categoryId = response.body.data.categoryId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "0130480a-2a70-499c-ace6-5c518e03066d",
              "parentUUID": "80a53364-7f31-431c-874f-f36fc542bee5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get category detail",
              "fullTitle": "Test Endpoint Category /categories Success get category detail",
              "timedOut": false,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/categories/' + categoryId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.category.name).not.to.be.null\n        expect(response.body.data.category.name).to.be.equal(addCategory.name)\n        expect(response.body.data.category.description).not.to.be.null\n        expect(response.body.data.category.description).to.be.equal(addCategory.description)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "3b52abc7-57ce-474d-bc99-43ace2be9482",
              "parentUUID": "80a53364-7f31-431c-874f-f36fc542bee5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get category list",
              "fullTitle": "Test Endpoint Category /categories Success get category list",
              "timedOut": false,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/categories')\n    .query({\n        page: 1,\n        q: 'makanan'\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "41606584-761e-4a0c-b57e-a6175638a52f",
              "parentUUID": "80a53364-7f31-431c-874f-f36fc542bee5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update category",
              "fullTitle": "Test Endpoint Category /categories Success update category",
              "timedOut": false,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/categories/' + categoryId)\n    .send(updateCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateCategory.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "5f30fc7a-e20b-490f-8106-4c949c5e4c17",
              "parentUUID": "80a53364-7f31-431c-874f-f36fc542bee5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete category",
              "fullTitle": "Test Endpoint Category /categories Success delete category",
              "timedOut": false,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/categories/' + categoryId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "da05eb82-35ac-442b-9076-2e97681e8e52",
              "parentUUID": "80a53364-7f31-431c-874f-f36fc542bee5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add category again",
              "fullTitle": "Test Endpoint Category /categories Success add category again",
              "timedOut": false,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/categories')\n    .send(addCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.data.categoryId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCategory.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Category berhasil ditambahkan')\n        categoryId = response.body.data.categoryId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "96d9456b-7eb1-45cb-a3b8-3d1125690fbc",
              "parentUUID": "80a53364-7f31-431c-874f-f36fc542bee5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0130480a-2a70-499c-ace6-5c518e03066d",
            "3b52abc7-57ce-474d-bc99-43ace2be9482",
            "41606584-761e-4a0c-b57e-a6175638a52f",
            "5f30fc7a-e20b-490f-8106-4c949c5e4c17",
            "da05eb82-35ac-442b-9076-2e97681e8e52",
            "96d9456b-7eb1-45cb-a3b8-3d1125690fbc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 608,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "77effd9b-d598-4f75-ae0e-2522abc17c27",
          "title": "Test Endpoint Customer /customers",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add customer",
              "fullTitle": "Test Endpoint Customer /customers Success add customer",
              "timedOut": false,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/customers')\n    .send(addCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Customer berhasil ditambahkan')\n        expect(response.body.data.customerId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCustomer.name)\n        customerId = response.body.data.customerId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "6917cf30-b140-4ba9-bc63-f34fc00074e9",
              "parentUUID": "77effd9b-d598-4f75-ae0e-2522abc17c27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get customer detail",
              "fullTitle": "Test Endpoint Customer /customers Success get customer detail",
              "timedOut": false,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/customers/' + customerId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.customer.name).not.to.be.null\n        expect(response.body.data.customer.name).to.be.equal(addCustomer.name)\n        expect(response.body.data.customer.phone).not.to.be.null\n        expect(response.body.data.customer.phone).to.be.equal(addCustomer.phone)\n        expect(response.body.data.customer.address).not.to.be.null\n        expect(response.body.data.customer.address).to.be.equal(addCustomer.address)\n        expect(response.body.data.customer.description).not.to.be.null\n        expect(response.body.data.customer.description).to.be.equal(addCustomer.description)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "c0585d8c-d271-4c00-971e-2849d4a21050",
              "parentUUID": "77effd9b-d598-4f75-ae0e-2522abc17c27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get customer list",
              "fullTitle": "Test Endpoint Customer /customers Success get customer list",
              "timedOut": false,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/customers')\n    .query({\n        page: 1,\n        q: 'Budi'\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "c12b4ca6-5281-4581-bdcb-0892a8f1568f",
              "parentUUID": "77effd9b-d598-4f75-ae0e-2522abc17c27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update customer",
              "fullTitle": "Test Endpoint Customer /customers Success update customer",
              "timedOut": false,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/customers/' + customerId)\n    .send(updateCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateCustomer.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "6719b683-9671-4ab8-bab0-5b578c73ec80",
              "parentUUID": "77effd9b-d598-4f75-ae0e-2522abc17c27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete customer",
              "fullTitle": "Test Endpoint Customer /customers Success delete customer",
              "timedOut": false,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/customers/' + customerId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "028d6963-9c31-47b4-9c51-17c9305d3828",
              "parentUUID": "77effd9b-d598-4f75-ae0e-2522abc17c27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add customer again",
              "fullTitle": "Test Endpoint Customer /customers Success add customer again",
              "timedOut": false,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/customers')\n    .send(addCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Customer berhasil ditambahkan')\n        expect(response.body.data.customerId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCustomer.name)\n        customerId = response.body.data.customerId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "d792a09f-5e1b-4d6d-ae39-5fb020cb3628",
              "parentUUID": "77effd9b-d598-4f75-ae0e-2522abc17c27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6917cf30-b140-4ba9-bc63-f34fc00074e9",
            "c0585d8c-d271-4c00-971e-2849d4a21050",
            "c12b4ca6-5281-4581-bdcb-0892a8f1568f",
            "6719b683-9671-4ab8-bab0-5b578c73ec80",
            "028d6963-9c31-47b4-9c51-17c9305d3828",
            "d792a09f-5e1b-4d6d-ae39-5fb020cb3628"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 640,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f2cda10-2b52-40cd-9ee3-aafdf93d8818",
          "title": "Test Endpoint Product /products",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add product",
              "fullTitle": "Test Endpoint Product /products Success add product",
              "timedOut": false,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/products')\n    .send({\n        category_id: categoryId,\n        code: \"A314ASDDFIER3432\",\n        name: \"taro\",\n        price: 3500,\n        cost: 3000,\n        stock: 5\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Product berhasil ditambahkan')\n        expect(response.body.data.productId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(\"taro\")\n        productId = response.body.data.productId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "1f627e49-cbc6-4750-a4d3-6c1bbd0438b0",
              "parentUUID": "5f2cda10-2b52-40cd-9ee3-aafdf93d8818",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get product detail",
              "fullTitle": "Test Endpoint Product /products Success get product detail",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/products/' + productId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.product.code).not.to.be.null\n        expect(response.body.data.product.name).not.to.be.null\n        expect(response.body.data.product.name).to.be.equal(\"taro\")\n        expect(response.body.data.product.price).not.to.be.null\n        expect(response.body.data.product.price).to.be.equal(3500)\n        expect(response.body.data.product.cost).not.to.be.null\n        expect(response.body.data.product.cost).to.be.equal(3000)\n        expect(response.body.data.product.stock).not.to.be.null\n        expect(response.body.data.product.stock).to.be.equal(5)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "febd8350-94dc-4f99-af25-43d9d61dded0",
              "parentUUID": "5f2cda10-2b52-40cd-9ee3-aafdf93d8818",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get product list",
              "fullTitle": "Test Endpoint Product /products Success get product list",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/products')\n    .query({\n        page: 1,\n        q: \"taro\",\n        withStock: true,\n        withCategory: true,\n        categoryId: categoryId\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "3015fe1a-f391-4ac7-a9ef-595846608a93",
              "parentUUID": "5f2cda10-2b52-40cd-9ee3-aafdf93d8818",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update product",
              "fullTitle": "Test Endpoint Product /products Success update product",
              "timedOut": false,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/products/' + productId)\n    .send({\n        \"category_id\": categoryId,\n        \"code\": \"A314ASDDFIER3432\",\n        \"name\": \"taro\",\n        \"price\": 3500,\n        \"cost\": 3000,\n        \"stock\": 100\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal('taro')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "d4e1e0ad-ebd4-483e-bc6a-e0eeb3b040c9",
              "parentUUID": "5f2cda10-2b52-40cd-9ee3-aafdf93d8818",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete product",
              "fullTitle": "Test Endpoint Product /products Success delete product",
              "timedOut": false,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/products/' + productId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "8e0b05e2-7c5a-4fcb-9f30-38353954dcf5",
              "parentUUID": "5f2cda10-2b52-40cd-9ee3-aafdf93d8818",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add product again",
              "fullTitle": "Test Endpoint Product /products Success add product again",
              "timedOut": false,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/products')\n    .send({\n        category_id: categoryId,\n        code: \"A314ASDDFIER3432\",\n        name: \"taro\",\n        price: 3500,\n        cost: 3000,\n        stock: 50\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Product berhasil ditambahkan')\n        expect(response.body.data.productId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(\"taro\")\n        productId = response.body.data.productId\n        productCode = response.body.data.code\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "a9f92f1b-2e4d-4a8a-a444-c65a871a288e",
              "parentUUID": "5f2cda10-2b52-40cd-9ee3-aafdf93d8818",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f627e49-cbc6-4750-a4d3-6c1bbd0438b0",
            "febd8350-94dc-4f99-af25-43d9d61dded0",
            "3015fe1a-f391-4ac7-a9ef-595846608a93",
            "d4e1e0ad-ebd4-483e-bc6a-e0eeb3b040c9",
            "8e0b05e2-7c5a-4fcb-9f30-38353954dcf5",
            "a9f92f1b-2e4d-4a8a-a444-c65a871a288e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 685,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "98806489-d1a8-47aa-8c0d-2ed65ed347cb",
          "title": "Test Endpoint Sales Order /sales and Transaction /purchases",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add sales",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success add sales",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/sales')\n    .send({\n        \"officeId\": officeId,\n        \"customerId\": customerId,\n        \"date\": \"2023-02-01\",\n        \"invoice\": \"INV001\",\n        \"amount\": 2000,\n        \"discount\": 0,\n        \"description\": \"Pembelian pertama\",\n        \"items\": [\n            {\n                \"productId\": productId,\n                \"quantity\": 1,\n                \"price\": 2000\n            }\n        ]\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('transaksi ditambahkan')\n        expect(response.body.data.saleId).not.to.be.null\n        saleId = response.body.data.saleId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "9bd0d6d7-8405-4c83-a1d7-145f1b1bd99e",
              "parentUUID": "98806489-d1a8-47aa-8c0d-2ed65ed347cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get list sales data",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get list sales data",
              "timedOut": false,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/sales')\n    .query({\n        startDate: \"2023-01-01\",\n        endDate: \"2023-12-31\"\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "ccdd346f-df9f-4599-8866-f4f706b75868",
              "parentUUID": "98806489-d1a8-47aa-8c0d-2ed65ed347cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get sales order data",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get sales order data",
              "timedOut": false,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/sales/' + saleId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        done()\n    })",
              "err": {},
              "uuid": "06ca4795-a224-4464-83de-87af0362ce18",
              "parentUUID": "98806489-d1a8-47aa-8c0d-2ed65ed347cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add transaction",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success add transaction",
              "timedOut": false,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/purchases')\n    .send({\n        \"officeId\": officeId,\n        \"date\": \"2023-01-30\",\n        \"invoice\": \"INV/02/20/2023/001\",\n        \"amount\": 14000,\n        \"discount\": 0,\n        \"description\": \"test transaksi toko dwiky\",\n        \"items\": [\n            {\n                \"productId\": productId,\n                \"quantity\": 4,\n                \"cost\": 3500\n            }\n        ]\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('transaksi ditambahkan')\n        expect(response.body.data.purchaseId).not.to.be.null\n        purchaseId = response.body.data.purchaseId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "b00482c6-78ab-485c-9d0b-44440546700a",
              "parentUUID": "98806489-d1a8-47aa-8c0d-2ed65ed347cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get list of transaction",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get list of transaction",
              "timedOut": false,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/purchases/' + purchaseId)\n    .query({\n        startDate: \"2023-01-01\",\n        endDate: \"2023-12-31\"\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.purchase.date).not.to.be.null\n        expect(response.body.data.purchase.invoice).not.to.be.null\n        expect(response.body.data.purchase.description).not.to.be.null\n        expect(response.body.data.purchase.amount).not.to.be.null\n        expect(response.body.data.purchase.discount).not.to.be.null\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "4c880e2f-6786-4727-a763-d902d25d1063",
              "parentUUID": "98806489-d1a8-47aa-8c0d-2ed65ed347cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get transaction detail",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get transaction detail",
              "timedOut": false,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/purchases/' + purchaseId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.purchase.date).not.to.be.null\n        expect(response.body.data.purchase.invoice).not.to.be.null\n        expect(response.body.data.purchase.description).not.to.be.null\n        expect(response.body.data.purchase.amount).not.to.be.null\n        expect(response.body.data.purchase.discount).not.to.be.null\n        expect(response.body.data.purchase.description).to.be.equal('test transaksi toko dwiky')\n        expect(response.body.data.purchase.creator).to.be.equal('Toko Dwiky')\n        expect(response.body.data.purchase.office_name).to.be.equal('office-Toko Dwiky')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "6df48f04-eb12-4067-aebc-8a4349a08160",
              "parentUUID": "98806489-d1a8-47aa-8c0d-2ed65ed347cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9bd0d6d7-8405-4c83-a1d7-145f1b1bd99e",
            "ccdd346f-df9f-4599-8866-f4f706b75868",
            "06ca4795-a224-4464-83de-87af0362ce18",
            "b00482c6-78ab-485c-9d0b-44440546700a",
            "4c880e2f-6786-4727-a763-d902d25d1063",
            "6df48f04-eb12-4067-aebc-8a4349a08160"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}