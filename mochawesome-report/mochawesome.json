{
  "stats": {
    "suites": 7,
    "tests": 36,
    "passes": 36,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-21T06:12:16.605Z",
    "end": "2023-06-21T06:12:22.633Z",
    "duration": 6028,
    "testsRegistered": 36,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "15d0b09f-d392-4046-8bcf-e20437a383ef",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 618,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "request(baseUrl)\n    .post('/authentications')\n    .send(userLogin)\n    .end(function (err, res) {\n        token = res.body.data.accessToken\n        if (err) {\n            throw err\n        }\n        done()\n    })",
          "err": {},
          "uuid": "ae77571e-5582-4ae9-bbfb-edad82d20a17",
          "parentUUID": "15d0b09f-d392-4046-8bcf-e20437a383ef",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b59a430d-5ddf-4773-9a9f-a00bb45d19cc",
          "title": "Test Endpoint Registration /registration and Login /authentications",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success create user registration",
              "fullTitle": "Test Endpoint Registration /registration and Login /authentications Success create user registration",
              "timedOut": false,
              "duration": 439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/registration')\n    .send(userRegistration)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Toko berhasil didaftarkan')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(userRegistration.name)\n        expect(response.body.data.email).not.to.be.null\n        expect(response.body.data.email).to.be.equal(userRegistration.email)\n        expect(response.body.data.password).not.to.be.null\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "64a288a7-22ef-44ad-966a-390d66fc361f",
              "parentUUID": "b59a430d-5ddf-4773-9a9f-a00bb45d19cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success login",
              "fullTitle": "Test Endpoint Registration /registration and Login /authentications Success login",
              "timedOut": false,
              "duration": 430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/authentications')\n    .send(userLogin)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Authentication berhasil ditambahkan')\n        expect(response.body.data.accessToken).not.to.be.null\n        expect(response.body.data.refreshToken).not.to.be.null\n        expect(response.body.data.user.id).not.to.be.null\n        expect(response.body.data.user.name).not.to.be.null\n        expect(response.body.data.user.name).to.be.equal(userRegistration.name)\n        expect(response.body.data.user.role).not.to.be.null\n        expect(response.body.data.user.role).to.be.equal('admin')\n        expect(response.body.data.user.email).not.to.be.null\n        expect(response.body.data.user.email).to.be.equal(userRegistration.email)\n        expect(response.body.data.user.company_name).not.to.be.null\n        expect(response.body.data.user.company_name).to.be.equal(userRegistration.name)\n        officeId = response.body.data.user.officeId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "a3a96356-f1fb-4bb5-8a91-669c687b2a8b",
              "parentUUID": "b59a430d-5ddf-4773-9a9f-a00bb45d19cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64a288a7-22ef-44ad-966a-390d66fc361f",
            "a3a96356-f1fb-4bb5-8a91-669c687b2a8b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 869,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "03a0c8ce-fcaa-4ada-87ff-18fbc2211a16",
          "title": "Test Endpoint User /users",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success create user cashier",
              "fullTitle": "Test Endpoint User /users Success create user cashier",
              "timedOut": false,
              "duration": 424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/users')\n    .send(createUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil ditambahkan')\n        expect(response.body.data.userId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(createUser.name)\n        userId = response.body.data.userId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "08b11d02-d2f8-429b-a984-da847a3ff979",
              "parentUUID": "03a0c8ce-fcaa-4ada-87ff-18fbc2211a16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get user detail",
              "fullTitle": "Test Endpoint User /users Success get user detail",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/users/' + userId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.user.id).not.to.be.null\n        expect(response.body.data.user.name).not.to.be.null\n        expect(response.body.data.user.name).to.be.equal(createUser.name)\n        expect(response.body.data.user.email).not.to.be.null\n        expect(response.body.data.user.email).to.be.equal(createUser.email)\n        expect(response.body.data.user.role).not.to.be.null\n        expect(response.body.data.user.role).to.be.equal('kasir')\n        expect(response.body.status).to.be.equal('success')\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "2ce37b7c-d99c-4f01-bec8-f2bbcdf02fac",
              "parentUUID": "03a0c8ce-fcaa-4ada-87ff-18fbc2211a16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get user list",
              "fullTitle": "Test Endpoint User /users Success get user list",
              "timedOut": false,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/users')\n    .query({\n        q: 'kasir',\n        p: 1\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "b9522730-d189-4e52-93fa-961761901bb3",
              "parentUUID": "03a0c8ce-fcaa-4ada-87ff-18fbc2211a16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update user",
              "fullTitle": "Test Endpoint User /users Success update user",
              "timedOut": false,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/users/' + userId)\n    .send(updateUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateUser.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil diupdate')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "8d7ffc03-6c59-4fed-a36e-72f517ba7251",
              "parentUUID": "03a0c8ce-fcaa-4ada-87ff-18fbc2211a16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete user",
              "fullTitle": "Test Endpoint User /users Success delete user",
              "timedOut": false,
              "duration": 251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/users/' + userId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil dihapus')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "309c514d-f6a3-4088-b084-ed3aff3653f4",
              "parentUUID": "03a0c8ce-fcaa-4ada-87ff-18fbc2211a16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08b11d02-d2f8-429b-a984-da847a3ff979",
            "2ce37b7c-d99c-4f01-bec8-f2bbcdf02fac",
            "b9522730-d189-4e52-93fa-961761901bb3",
            "8d7ffc03-6c59-4fed-a36e-72f517ba7251",
            "309c514d-f6a3-4088-b084-ed3aff3653f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1022,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "75364715-1bbe-41b8-9b1e-e0f51c2fda29",
          "title": "Test Endpoint Unit /units",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add unit",
              "fullTitle": "Test Endpoint Unit /units Success add unit",
              "timedOut": false,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/units')\n    .send(addUnit)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Unit berhasil ditambahkan')\n        expect(response.body.data.unitId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addUnit.name)\n        unitId = response.body.data.unitId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "52c31b65-01db-410d-abe3-dab66b8c4191",
              "parentUUID": "75364715-1bbe-41b8-9b1e-e0f51c2fda29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get unit detail",
              "fullTitle": "Test Endpoint Unit /units Success get unit detail",
              "timedOut": false,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/units/' + unitId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.unit.name).not.to.be.null\n        expect(response.body.data.unit.name).to.be.equal(addUnit.name)\n        expect(response.body.data.unit.description).not.to.be.null\n        expect(response.body.data.unit.description).to.be.equal(addUnit.description)\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "9b231987-047c-46bc-b3bd-b83a5b51d050",
              "parentUUID": "75364715-1bbe-41b8-9b1e-e0f51c2fda29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get unit list",
              "fullTitle": "Test Endpoint Unit /units Success get unit list",
              "timedOut": false,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/units')\n    .query({\n        q: 'gram',\n        page: 1\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "949491f5-c29a-47f3-a6ba-19765b589aeb",
              "parentUUID": "75364715-1bbe-41b8-9b1e-e0f51c2fda29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update unit",
              "fullTitle": "Test Endpoint Unit /units Success update unit",
              "timedOut": false,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/units/' + unitId)\n    .send(updateUnit)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateUnit.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "aca69a27-32b4-4305-9449-d1edb0709835",
              "parentUUID": "75364715-1bbe-41b8-9b1e-e0f51c2fda29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete unit",
              "fullTitle": "Test Endpoint Unit /units Success delete unit",
              "timedOut": false,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/units/' + unitId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "7efcdf74-d9ec-4ee6-a265-f842f42287c1",
              "parentUUID": "75364715-1bbe-41b8-9b1e-e0f51c2fda29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "52c31b65-01db-410d-abe3-dab66b8c4191",
            "9b231987-047c-46bc-b3bd-b83a5b51d050",
            "949491f5-c29a-47f3-a6ba-19765b589aeb",
            "aca69a27-32b4-4305-9449-d1edb0709835",
            "7efcdf74-d9ec-4ee6-a265-f842f42287c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 563,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3a1bc460-a795-4143-8d8f-52e563df50ba",
          "title": "Test Endpoint Category /categories",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add category",
              "fullTitle": "Test Endpoint Category /categories Success add category",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/categories')\n    .send(addCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.data.categoryId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCategory.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Category berhasil ditambahkan')\n        categoryId = response.body.data.categoryId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "8e660a6c-dc28-4ed0-bc6e-8d812c25c058",
              "parentUUID": "3a1bc460-a795-4143-8d8f-52e563df50ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get category detail",
              "fullTitle": "Test Endpoint Category /categories Success get category detail",
              "timedOut": false,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/categories/' + categoryId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.category.name).not.to.be.null\n        expect(response.body.data.category.name).to.be.equal(addCategory.name)\n        expect(response.body.data.category.description).not.to.be.null\n        expect(response.body.data.category.description).to.be.equal(addCategory.description)\n        expect(response.body.status).to.be.equal('success')\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "602e52e3-e8f2-4356-afb8-451b1309cf27",
              "parentUUID": "3a1bc460-a795-4143-8d8f-52e563df50ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get category list",
              "fullTitle": "Test Endpoint Category /categories Success get category list",
              "timedOut": false,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/categories')\n    .query({\n        page: 1,\n        q: 'makanan'\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "74be92b6-18a6-45d8-a94c-6f81f50885f8",
              "parentUUID": "3a1bc460-a795-4143-8d8f-52e563df50ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update category",
              "fullTitle": "Test Endpoint Category /categories Success update category",
              "timedOut": false,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/categories/' + categoryId)\n    .send(updateCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateCategory.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "06e48a19-3bc1-4297-ae8c-a471fcf6d512",
              "parentUUID": "3a1bc460-a795-4143-8d8f-52e563df50ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete category",
              "fullTitle": "Test Endpoint Category /categories Success delete category",
              "timedOut": false,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/categories/' + categoryId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "6e893f6b-fe32-4a63-95a0-c1f176892223",
              "parentUUID": "3a1bc460-a795-4143-8d8f-52e563df50ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add category again",
              "fullTitle": "Test Endpoint Category /categories Success add category again",
              "timedOut": false,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/categories')\n    .send(addCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.data.categoryId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCategory.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Category berhasil ditambahkan')\n        categoryId = response.body.data.categoryId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "3199fa18-af09-4b5e-ad76-fc210a9fe5de",
              "parentUUID": "3a1bc460-a795-4143-8d8f-52e563df50ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e660a6c-dc28-4ed0-bc6e-8d812c25c058",
            "602e52e3-e8f2-4356-afb8-451b1309cf27",
            "74be92b6-18a6-45d8-a94c-6f81f50885f8",
            "06e48a19-3bc1-4297-ae8c-a471fcf6d512",
            "6e893f6b-fe32-4a63-95a0-c1f176892223",
            "3199fa18-af09-4b5e-ad76-fc210a9fe5de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 749,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fa5889fd-9490-427f-8fd4-86705b076775",
          "title": "Test Endpoint Customer /customers",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add customer",
              "fullTitle": "Test Endpoint Customer /customers Success add customer",
              "timedOut": false,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/customers')\n    .send(addCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Customer berhasil ditambahkan')\n        expect(response.body.data.customerId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCustomer.name)\n        customerId = response.body.data.customerId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "b8047e6c-c7af-4c2e-b47f-2666a5187129",
              "parentUUID": "fa5889fd-9490-427f-8fd4-86705b076775",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get customer detail",
              "fullTitle": "Test Endpoint Customer /customers Success get customer detail",
              "timedOut": false,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/customers/' + customerId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.customer.name).not.to.be.null\n        expect(response.body.data.customer.name).to.be.equal(addCustomer.name)\n        expect(response.body.data.customer.phone).not.to.be.null\n        expect(response.body.data.customer.phone).to.be.equal(addCustomer.phone)\n        expect(response.body.data.customer.address).not.to.be.null\n        expect(response.body.data.customer.address).to.be.equal(addCustomer.address)\n        expect(response.body.data.customer.description).not.to.be.null\n        expect(response.body.data.customer.description).to.be.equal(addCustomer.description)\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "660f1ec3-7dc1-4768-a08b-00f08c82879b",
              "parentUUID": "fa5889fd-9490-427f-8fd4-86705b076775",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get customer list",
              "fullTitle": "Test Endpoint Customer /customers Success get customer list",
              "timedOut": false,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/customers')\n    .query({\n        page: 1,\n        q: 'Budi'\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "ee867a22-3686-4efd-82d0-69536401ad9c",
              "parentUUID": "fa5889fd-9490-427f-8fd4-86705b076775",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update customer",
              "fullTitle": "Test Endpoint Customer /customers Success update customer",
              "timedOut": false,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/customers/' + customerId)\n    .send(updateCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateCustomer.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "80614a80-e3d0-45eb-8912-da2e6ea1bfb6",
              "parentUUID": "fa5889fd-9490-427f-8fd4-86705b076775",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete customer",
              "fullTitle": "Test Endpoint Customer /customers Success delete customer",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/customers/' + customerId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "6aa5e839-a496-45cd-88a5-fbde849b3cda",
              "parentUUID": "fa5889fd-9490-427f-8fd4-86705b076775",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add customer again",
              "fullTitle": "Test Endpoint Customer /customers Success add customer again",
              "timedOut": false,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/customers')\n    .send(addCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Customer berhasil ditambahkan')\n        expect(response.body.data.customerId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCustomer.name)\n        customerId = response.body.data.customerId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "2599fc89-1143-4121-99b2-5e4cf67f3cab",
              "parentUUID": "fa5889fd-9490-427f-8fd4-86705b076775",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8047e6c-c7af-4c2e-b47f-2666a5187129",
            "660f1ec3-7dc1-4768-a08b-00f08c82879b",
            "ee867a22-3686-4efd-82d0-69536401ad9c",
            "80614a80-e3d0-45eb-8912-da2e6ea1bfb6",
            "6aa5e839-a496-45cd-88a5-fbde849b3cda",
            "2599fc89-1143-4121-99b2-5e4cf67f3cab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 673,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "37f01162-f246-4b17-8583-c857e8b68977",
          "title": "Test Endpoint Product /products",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add product",
              "fullTitle": "Test Endpoint Product /products Success add product",
              "timedOut": false,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/products')\n    .send({\n        category_id: categoryId,\n        code: \"A314ASDDFIER3432\",\n        name: \"taro\",\n        price: 3500,\n        cost: 3000,\n        stock: 5\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Product berhasil ditambahkan')\n        expect(response.body.data.productId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(\"taro\")\n        productId = response.body.data.productId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "b1cc6595-b725-45f5-b206-d6480c78aae0",
              "parentUUID": "37f01162-f246-4b17-8583-c857e8b68977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get product detail",
              "fullTitle": "Test Endpoint Product /products Success get product detail",
              "timedOut": false,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/products/' + productId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.product.code).not.to.be.null\n        expect(response.body.data.product.name).not.to.be.null\n        expect(response.body.data.product.name).to.be.equal(\"taro\")\n        expect(response.body.data.product.price).not.to.be.null\n        expect(response.body.data.product.price).to.be.equal(3500)\n        expect(response.body.data.product.cost).not.to.be.null\n        expect(response.body.data.product.cost).to.be.equal(3000)\n        expect(response.body.data.product.stock).not.to.be.null\n        expect(response.body.data.product.stock).to.be.equal(5)\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "bcff8384-762f-4dda-987a-6fbc7a6a22c5",
              "parentUUID": "37f01162-f246-4b17-8583-c857e8b68977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get product list",
              "fullTitle": "Test Endpoint Product /products Success get product list",
              "timedOut": false,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/products')\n    .query({\n        page: 1,\n        q: \"taro\",\n        withStock: true,\n        withCategory: true,\n        categoryId: categoryId\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "fcc15ea9-da19-4629-8c36-9a43443f57bf",
              "parentUUID": "37f01162-f246-4b17-8583-c857e8b68977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update product",
              "fullTitle": "Test Endpoint Product /products Success update product",
              "timedOut": false,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/products/' + productId)\n    .send({\n        \"category_id\": categoryId,\n        \"code\": \"A314ASDDFIER3432\",\n        \"name\": \"taro\",\n        \"price\": 3500,\n        \"cost\": 3000,\n        \"stock\": 100\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal('taro')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "e2f2542d-1c47-4db7-8e3b-ca1dfbaea021",
              "parentUUID": "37f01162-f246-4b17-8583-c857e8b68977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete product",
              "fullTitle": "Test Endpoint Product /products Success delete product",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/products/' + productId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "1a004f45-dd93-49e6-be19-ae3df5301a8c",
              "parentUUID": "37f01162-f246-4b17-8583-c857e8b68977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add product again",
              "fullTitle": "Test Endpoint Product /products Success add product again",
              "timedOut": false,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/products')\n    .send({\n        category_id: categoryId,\n        code: \"A314ASDDFIER3432\",\n        name: \"taro\",\n        price: 3500,\n        cost: 3000,\n        stock: 50\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Product berhasil ditambahkan')\n        expect(response.body.data.productId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(\"taro\")\n        productId = response.body.data.productId\n        productCode = response.body.data.code\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "3d86864f-6c40-4f9c-9c2b-7400577ead32",
              "parentUUID": "37f01162-f246-4b17-8583-c857e8b68977",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1cc6595-b725-45f5-b206-d6480c78aae0",
            "bcff8384-762f-4dda-987a-6fbc7a6a22c5",
            "fcc15ea9-da19-4629-8c36-9a43443f57bf",
            "e2f2542d-1c47-4db7-8e3b-ca1dfbaea021",
            "1a004f45-dd93-49e6-be19-ae3df5301a8c",
            "3d86864f-6c40-4f9c-9c2b-7400577ead32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b7150511-1cbc-4c9d-83ed-d57253eb0773",
          "title": "Test Endpoint Sales Order /sales and Transaction /purchases",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add sales",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success add sales",
              "timedOut": false,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/sales')\n    .send({\n        \"officeId\": officeId,\n        \"customerId\": customerId,\n        \"date\": \"2023-02-01\",\n        \"invoice\": \"INV001\",\n        \"amount\": 2000,\n        \"discount\": 0,\n        \"description\": \"Pembelian pertama\",\n        \"items\": [\n            {\n                \"productId\": productId,\n                \"quantity\": 1,\n                \"price\": 2000\n            }\n        ]\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('transaksi ditambahkan')\n        expect(response.body.data.saleId).not.to.be.null\n        saleId = response.body.data.saleId\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "f5fbc4ad-2197-4478-8eb5-e57560d1edaa",
              "parentUUID": "b7150511-1cbc-4c9d-83ed-d57253eb0773",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get list sales data",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get list sales data",
              "timedOut": false,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/sales')\n    .query({\n        startDate: \"2023-01-01\",\n        endDate: \"2023-12-31\"\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "99180267-508d-4eca-9fc4-5fba18bccf52",
              "parentUUID": "b7150511-1cbc-4c9d-83ed-d57253eb0773",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get sales order data",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get sales order data",
              "timedOut": false,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/sales/' + saleId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        done()\n    })",
              "err": {},
              "uuid": "01a09c98-f76c-4f69-86ac-6d2d637f3bcf",
              "parentUUID": "b7150511-1cbc-4c9d-83ed-d57253eb0773",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add transaction",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success add transaction",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/purchases')\n    .send({\n        \"officeId\": officeId,\n        \"date\": \"2023-01-30\",\n        \"invoice\": \"INV/02/20/2023/001\",\n        \"amount\": 14000,\n        \"discount\": 0,\n        \"description\": \"test transaksi toko dwiky\",\n        \"items\": [\n            {\n                \"productId\": productId,\n                \"quantity\": 4,\n                \"cost\": 3500\n            }\n        ]\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('transaksi ditambahkan')\n        expect(response.body.data.purchaseId).not.to.be.null\n        purchaseId = response.body.data.purchaseId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "429c8a04-2d4b-4acf-88a9-c65e03a12249",
              "parentUUID": "b7150511-1cbc-4c9d-83ed-d57253eb0773",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get list of transaction",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get list of transaction",
              "timedOut": false,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/purchases/' + purchaseId)\n    .query({\n        startDate: \"2023-01-01\",\n        endDate: \"2023-12-31\"\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.purchase.date).not.to.be.null\n        expect(response.body.data.purchase.invoice).not.to.be.null\n        expect(response.body.data.purchase.description).not.to.be.null\n        expect(response.body.data.purchase.amount).not.to.be.null\n        expect(response.body.data.purchase.discount).not.to.be.null\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "10774085-9263-4de4-a8d2-8710c81099dd",
              "parentUUID": "b7150511-1cbc-4c9d-83ed-d57253eb0773",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get transaction detail",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get transaction detail",
              "timedOut": false,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/purchases/' + purchaseId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.purchase.date).not.to.be.null\n        expect(response.body.data.purchase.invoice).not.to.be.null\n        expect(response.body.data.purchase.description).not.to.be.null\n        expect(response.body.data.purchase.amount).not.to.be.null\n        expect(response.body.data.purchase.discount).not.to.be.null\n        expect(response.body.data.purchase.description).to.be.equal('test transaksi toko dwiky')\n        expect(response.body.data.purchase.creator).to.be.equal('Toko Dwiky')\n        expect(response.body.data.purchase.office_name).to.be.equal('office-Toko Dwiky')\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "3a31afd4-bf4a-4c01-9235-ae573ea0c5fa",
              "parentUUID": "b7150511-1cbc-4c9d-83ed-d57253eb0773",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5fbc4ad-2197-4478-8eb5-e57560d1edaa",
            "99180267-508d-4eca-9fc4-5fba18bccf52",
            "01a09c98-f76c-4f69-86ac-6d2d637f3bcf",
            "429c8a04-2d4b-4acf-88a9-c65e03a12249",
            "10774085-9263-4de4-a8d2-8710c81099dd",
            "3a31afd4-bf4a-4c01-9235-ae573ea0c5fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}