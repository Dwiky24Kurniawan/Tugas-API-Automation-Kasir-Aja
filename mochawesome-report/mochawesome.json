{
  "stats": {
    "suites": 7,
    "tests": 36,
    "passes": 36,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-20T04:45:26.365Z",
    "end": "2023-06-20T04:45:33.027Z",
    "duration": 6662,
    "testsRegistered": 36,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "facfa85a-52fe-4114-b896-c9544f3d67be",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 573,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "request(baseUrl)\n    .post('/authentications')\n    .send(userLogin)\n    .end(function (err, res) {\n        token = res.body.data.accessToken\n        if (err) {\n            throw err\n        }\n        done()\n    })",
          "err": {},
          "uuid": "0943aee6-1272-41e3-ae90-990025c288f8",
          "parentUUID": "facfa85a-52fe-4114-b896-c9544f3d67be",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a65ef796-4075-4042-86c8-50981eb447fb",
          "title": "Test Endpoint Registration /registration and Login /authentications",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create user registration",
              "fullTitle": "Test Endpoint Registration /registration and Login /authentications Create user registration",
              "timedOut": false,
              "duration": 427,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/registration')\n    .send(userRegistration)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Toko berhasil didaftarkan')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(userRegistration.name)\n        expect(response.body.data.email).not.to.be.null\n        expect(response.body.data.email).to.be.equal(userRegistration.email)\n        expect(response.body.data.password).not.to.be.null\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "fe633b6c-dd50-434d-8140-2ad91d633f2e",
              "parentUUID": "a65ef796-4075-4042-86c8-50981eb447fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success login",
              "fullTitle": "Test Endpoint Registration /registration and Login /authentications Success login",
              "timedOut": false,
              "duration": 437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/authentications')\n    .send(userLogin)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Authentication berhasil ditambahkan')\n        expect(response.body.data.accessToken).not.to.be.null\n        expect(response.body.data.refreshToken).not.to.be.null\n        expect(response.body.data.user.id).not.to.be.null\n        expect(response.body.data.user.name).not.to.be.null\n        expect(response.body.data.user.name).to.be.equal(userRegistration.name)\n        expect(response.body.data.user.role).not.to.be.null\n        expect(response.body.data.user.role).to.be.equal('admin')\n        expect(response.body.data.user.email).not.to.be.null\n        expect(response.body.data.user.email).to.be.equal(userRegistration.email)\n        expect(response.body.data.user.company_name).not.to.be.null\n        expect(response.body.data.user.company_name).to.be.equal(userRegistration.name)\n        officeId = response.body.data.user.officeId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "83a828b3-7da6-45b3-af3f-225e130a24ac",
              "parentUUID": "a65ef796-4075-4042-86c8-50981eb447fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe633b6c-dd50-434d-8140-2ad91d633f2e",
            "83a828b3-7da6-45b3-af3f-225e130a24ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 864,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "23c54129-fe29-4778-a105-90f3e54b19d6",
          "title": "Test Endpoint User /users",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success create user",
              "fullTitle": "Test Endpoint User /users Success create user",
              "timedOut": false,
              "duration": 417,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/users')\n    .send(createUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil ditambahkan')\n        expect(response.body.data.userId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(createUser.name)\n        userId = response.body.data.userId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "89ca2286-6817-4ace-9d06-0a33c382121f",
              "parentUUID": "23c54129-fe29-4778-a105-90f3e54b19d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get user detail",
              "fullTitle": "Test Endpoint User /users Success get user detail",
              "timedOut": false,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/users/' + userId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.user.id).not.to.be.null\n        expect(response.body.data.user.name).not.to.be.null\n        expect(response.body.data.user.name).to.be.equal(createUser.name)\n        expect(response.body.data.user.email).not.to.be.null\n        expect(response.body.data.user.email).to.be.equal(createUser.email)\n        expect(response.body.data.user.role).not.to.be.null\n        expect(response.body.data.user.role).to.be.equal('kasir')\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "37b6fe2d-99a8-481d-b69d-181b3418da98",
              "parentUUID": "23c54129-fe29-4778-a105-90f3e54b19d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get user list",
              "fullTitle": "Test Endpoint User /users Success get user list",
              "timedOut": false,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/users')\n    .query({\n        q: 'kasir',\n        p: 1\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "80ddc34b-f4d0-4c73-8bb3-9a6442387bdf",
              "parentUUID": "23c54129-fe29-4778-a105-90f3e54b19d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update user",
              "fullTitle": "Test Endpoint User /users Success update user",
              "timedOut": false,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/users/' + userId)\n    .send(updateUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateUser.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil diupdate')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "b23cbaff-b585-4f25-a0e9-54cae797391d",
              "parentUUID": "23c54129-fe29-4778-a105-90f3e54b19d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete user",
              "fullTitle": "Test Endpoint User /users Success delete user",
              "timedOut": false,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/users/' + userId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil dihapus')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "c628b172-1ca2-4897-8f5f-1ce04a1d119b",
              "parentUUID": "23c54129-fe29-4778-a105-90f3e54b19d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89ca2286-6817-4ace-9d06-0a33c382121f",
            "37b6fe2d-99a8-481d-b69d-181b3418da98",
            "80ddc34b-f4d0-4c73-8bb3-9a6442387bdf",
            "b23cbaff-b585-4f25-a0e9-54cae797391d",
            "c628b172-1ca2-4897-8f5f-1ce04a1d119b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 862,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dfdc6568-db9a-4a16-b6d0-4e8f39d354b7",
          "title": "Test Endpoint Unit /units",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add unit",
              "fullTitle": "Test Endpoint Unit /units Success add unit",
              "timedOut": false,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/units')\n    .send(addUnit)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Unit berhasil ditambahkan')\n        expect(response.body.data.unitId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addUnit.name)\n        unitId = response.body.data.unitId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "4e7b5945-2617-4581-bc16-04e0e2ba3346",
              "parentUUID": "dfdc6568-db9a-4a16-b6d0-4e8f39d354b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get unit detail",
              "fullTitle": "Test Endpoint Unit /units Success get unit detail",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/units/' + unitId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.unit.name).not.to.be.null\n        expect(response.body.data.unit.name).to.be.equal(addUnit.name)\n        expect(response.body.data.unit.description).not.to.be.null\n        expect(response.body.data.unit.description).to.be.equal(addUnit.description)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "ce9f9345-11ce-4ad1-8c2a-b09f7f12eeb7",
              "parentUUID": "dfdc6568-db9a-4a16-b6d0-4e8f39d354b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get unit list",
              "fullTitle": "Test Endpoint Unit /units Success get unit list",
              "timedOut": false,
              "duration": 265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/units')\n    .query({\n        q: 'gram',\n        page: 1\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "13c786cc-13bb-4dd3-952c-c13a8df3fb3b",
              "parentUUID": "dfdc6568-db9a-4a16-b6d0-4e8f39d354b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update unit",
              "fullTitle": "Test Endpoint Unit /units Success update unit",
              "timedOut": false,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/units/' + unitId)\n    .send(updateUnit)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateUnit.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "dbf47041-e24e-496e-bdec-c350799c6ee9",
              "parentUUID": "dfdc6568-db9a-4a16-b6d0-4e8f39d354b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete unit",
              "fullTitle": "Test Endpoint Unit /units Success delete unit",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/units/' + unitId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "3a639bd7-7983-4bd7-90ab-babafbda9766",
              "parentUUID": "dfdc6568-db9a-4a16-b6d0-4e8f39d354b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e7b5945-2617-4581-bc16-04e0e2ba3346",
            "ce9f9345-11ce-4ad1-8c2a-b09f7f12eeb7",
            "13c786cc-13bb-4dd3-952c-c13a8df3fb3b",
            "dbf47041-e24e-496e-bdec-c350799c6ee9",
            "3a639bd7-7983-4bd7-90ab-babafbda9766"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 680,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "afde8902-2654-4213-a19b-4dc2ab56bc3e",
          "title": "Test Endpoint Category /categories",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add category",
              "fullTitle": "Test Endpoint Category /categories Success add category",
              "timedOut": false,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/categories')\n    .send(addCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.data.categoryId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCategory.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Category berhasil ditambahkan')\n        categoryId = response.body.data.categoryId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "9c78521b-2bca-4590-8886-57d4a6c2aca5",
              "parentUUID": "afde8902-2654-4213-a19b-4dc2ab56bc3e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get category detail",
              "fullTitle": "Test Endpoint Category /categories Success get category detail",
              "timedOut": false,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/categories/' + categoryId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.category.name).not.to.be.null\n        expect(response.body.data.category.name).to.be.equal(addCategory.name)\n        expect(response.body.data.category.description).not.to.be.null\n        expect(response.body.data.category.description).to.be.equal(addCategory.description)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "82eeb215-1f1d-4311-87c3-ecab5d6c5875",
              "parentUUID": "afde8902-2654-4213-a19b-4dc2ab56bc3e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get category list",
              "fullTitle": "Test Endpoint Category /categories Success get category list",
              "timedOut": false,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/categories')\n    .query({\n        page: 1,\n        q: 'makanan'\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "bedbd72a-5620-4b28-a109-9e9155ae2229",
              "parentUUID": "afde8902-2654-4213-a19b-4dc2ab56bc3e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update category",
              "fullTitle": "Test Endpoint Category /categories Success update category",
              "timedOut": false,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/categories/' + categoryId)\n    .send(updateCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateCategory.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "4c482158-86ad-41b0-941a-f5f534846243",
              "parentUUID": "afde8902-2654-4213-a19b-4dc2ab56bc3e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete category",
              "fullTitle": "Test Endpoint Category /categories Success delete category",
              "timedOut": false,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/categories/' + categoryId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "a347d9d8-befc-45d4-9f6b-6a8484fb1a50",
              "parentUUID": "afde8902-2654-4213-a19b-4dc2ab56bc3e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add category again",
              "fullTitle": "Test Endpoint Category /categories Success add category again",
              "timedOut": false,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/categories')\n    .send(addCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.data.categoryId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCategory.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Category berhasil ditambahkan')\n        categoryId = response.body.data.categoryId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "f98fa3d6-7c4d-4d82-b043-c299c28eb8ce",
              "parentUUID": "afde8902-2654-4213-a19b-4dc2ab56bc3e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c78521b-2bca-4590-8886-57d4a6c2aca5",
            "82eeb215-1f1d-4311-87c3-ecab5d6c5875",
            "bedbd72a-5620-4b28-a109-9e9155ae2229",
            "4c482158-86ad-41b0-941a-f5f534846243",
            "a347d9d8-befc-45d4-9f6b-6a8484fb1a50",
            "f98fa3d6-7c4d-4d82-b043-c299c28eb8ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 628,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3fabe582-59ea-4181-ac69-eea4e14b4cb0",
          "title": "Test Endpoint Customer /customers",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add customer",
              "fullTitle": "Test Endpoint Customer /customers Success add customer",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/customers')\n    .send(addCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Customer berhasil ditambahkan')\n        expect(response.body.data.customerId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCustomer.name)\n        customerId = response.body.data.customerId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "ad8a8c49-3503-419d-b6fd-52444004038e",
              "parentUUID": "3fabe582-59ea-4181-ac69-eea4e14b4cb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get customer detail",
              "fullTitle": "Test Endpoint Customer /customers Success get customer detail",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/customers/' + customerId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.customer.name).not.to.be.null\n        expect(response.body.data.customer.name).to.be.equal(addCustomer.name)\n        expect(response.body.data.customer.phone).not.to.be.null\n        expect(response.body.data.customer.phone).to.be.equal(addCustomer.phone)\n        expect(response.body.data.customer.address).not.to.be.null\n        expect(response.body.data.customer.address).to.be.equal(addCustomer.address)\n        expect(response.body.data.customer.description).not.to.be.null\n        expect(response.body.data.customer.description).to.be.equal(addCustomer.description)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "f576b7da-cb50-4c6f-bae5-79217461daaf",
              "parentUUID": "3fabe582-59ea-4181-ac69-eea4e14b4cb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get customer list",
              "fullTitle": "Test Endpoint Customer /customers Success get customer list",
              "timedOut": false,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/customers')\n    .query({\n        page: 1,\n        q: 'Budi'\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "759d7685-2d52-4888-ac68-ddea037115ae",
              "parentUUID": "3fabe582-59ea-4181-ac69-eea4e14b4cb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update customer",
              "fullTitle": "Test Endpoint Customer /customers Success update customer",
              "timedOut": false,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/customers/' + customerId)\n    .send(updateCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateCustomer.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "af4330f3-b1ad-44d7-9bf2-3c977ab30ab2",
              "parentUUID": "3fabe582-59ea-4181-ac69-eea4e14b4cb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete customer",
              "fullTitle": "Test Endpoint Customer /customers Success delete customer",
              "timedOut": false,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/customers/' + customerId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "a41762eb-7acb-4795-8a18-61efa1c29a82",
              "parentUUID": "3fabe582-59ea-4181-ac69-eea4e14b4cb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add customer again",
              "fullTitle": "Test Endpoint Customer /customers Success add customer again",
              "timedOut": false,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/customers')\n    .send(addCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Customer berhasil ditambahkan')\n        expect(response.body.data.customerId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCustomer.name)\n        customerId = response.body.data.customerId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "63e97049-1daf-40ac-a583-7dec5228293e",
              "parentUUID": "3fabe582-59ea-4181-ac69-eea4e14b4cb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad8a8c49-3503-419d-b6fd-52444004038e",
            "f576b7da-cb50-4c6f-bae5-79217461daaf",
            "759d7685-2d52-4888-ac68-ddea037115ae",
            "af4330f3-b1ad-44d7-9bf2-3c977ab30ab2",
            "a41762eb-7acb-4795-8a18-61efa1c29a82",
            "63e97049-1daf-40ac-a583-7dec5228293e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 635,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e77a3036-ca87-4deb-9666-086e61602d7a",
          "title": "Test Endpoint Product /products",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add product",
              "fullTitle": "Test Endpoint Product /products Success add product",
              "timedOut": false,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/products')\n    .send({\n        category_id: categoryId,\n        code: \"A314ASDDFIER3432\",\n        name: \"taro\",\n        price: 3500,\n        cost: 3000,\n        stock: 5\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Product berhasil ditambahkan')\n        expect(response.body.data.productId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(\"taro\")\n        productId = response.body.data.productId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "892abc5f-abe5-4830-a5a8-3d3d5a5f3141",
              "parentUUID": "e77a3036-ca87-4deb-9666-086e61602d7a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get product detail",
              "fullTitle": "Test Endpoint Product /products Success get product detail",
              "timedOut": false,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/products/' + productId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.product.code).not.to.be.null\n        expect(response.body.data.product.name).not.to.be.null\n        expect(response.body.data.product.name).to.be.equal(\"taro\")\n        expect(response.body.data.product.price).not.to.be.null\n        expect(response.body.data.product.price).to.be.equal(3500)\n        expect(response.body.data.product.cost).not.to.be.null\n        expect(response.body.data.product.cost).to.be.equal(3000)\n        expect(response.body.data.product.stock).not.to.be.null\n        expect(response.body.data.product.stock).to.be.equal(5)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "f0c34f91-6994-4da7-9a92-521a0d0f7429",
              "parentUUID": "e77a3036-ca87-4deb-9666-086e61602d7a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get product list",
              "fullTitle": "Test Endpoint Product /products Success get product list",
              "timedOut": false,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/products')\n    .query({\n        page: 1,\n        q: \"taro\",\n        withStock: true,\n        withCategory: true,\n        categoryId: categoryId\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "f838fc0c-32da-49e0-89c5-38b10c22e967",
              "parentUUID": "e77a3036-ca87-4deb-9666-086e61602d7a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update product",
              "fullTitle": "Test Endpoint Product /products Success update product",
              "timedOut": false,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/products/' + productId)\n    .send({\n        \"category_id\": categoryId,\n        \"code\": \"A314ASDDFIER3432\",\n        \"name\": \"taro\",\n        \"price\": 3500,\n        \"cost\": 3000,\n        \"stock\": 100\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal('taro')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "19a48620-147a-47c6-9a7c-471b01ba154c",
              "parentUUID": "e77a3036-ca87-4deb-9666-086e61602d7a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete product",
              "fullTitle": "Test Endpoint Product /products Success delete product",
              "timedOut": false,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/products/' + productId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "2a1f587b-9a84-48a6-8374-38387252705d",
              "parentUUID": "e77a3036-ca87-4deb-9666-086e61602d7a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add product again",
              "fullTitle": "Test Endpoint Product /products Success add product again",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/products')\n    .send({\n        category_id: categoryId,\n        code: \"A314ASDDFIER3432\",\n        name: \"taro\",\n        price: 3500,\n        cost: 3000,\n        stock: 50\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Product berhasil ditambahkan')\n        expect(response.body.data.productId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(\"taro\")\n        productId = response.body.data.productId\n        productCode = response.body.data.code\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "c30fa86e-7c51-4fb8-af7f-1ccecc25cc1c",
              "parentUUID": "e77a3036-ca87-4deb-9666-086e61602d7a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "892abc5f-abe5-4830-a5a8-3d3d5a5f3141",
            "f0c34f91-6994-4da7-9a92-521a0d0f7429",
            "f838fc0c-32da-49e0-89c5-38b10c22e967",
            "19a48620-147a-47c6-9a7c-471b01ba154c",
            "2a1f587b-9a84-48a6-8374-38387252705d",
            "c30fa86e-7c51-4fb8-af7f-1ccecc25cc1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3b5b454b-f9d4-4f29-952f-fc329d93dd93",
          "title": "Test Endpoint Sales Order /sales and Transaction /purchases",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add sales",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success add sales",
              "timedOut": false,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/sales')\n    .send({\n        \"officeId\": officeId,\n        \"customerId\": customerId,\n        \"date\": \"2023-02-01\",\n        \"invoice\": \"INV001\",\n        \"amount\": 2000,\n        \"discount\": 0,\n        \"description\": \"Pembelian pertama\",\n        \"items\": [\n            {\n                \"productId\": productId,\n                \"quantity\": 1,\n                \"price\": 2000\n            }\n        ]\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('transaksi ditambahkan')\n        expect(response.body.data.saleId).not.to.be.null\n        saleId = response.body.data.saleId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "21aed220-c910-4ce9-8394-af333bf6477a",
              "parentUUID": "3b5b454b-f9d4-4f29-952f-fc329d93dd93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get list sales data",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get list sales data",
              "timedOut": false,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/sales')\n    .query({\n        startDate: \"2023-01-01\",\n        endDate: \"2023-12-31\"\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "e204f025-cb4b-4481-b729-99b30fc659e9",
              "parentUUID": "3b5b454b-f9d4-4f29-952f-fc329d93dd93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get sales order data",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get sales order data",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/sales/' + saleId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        done()\n    })",
              "err": {},
              "uuid": "f6cb44b6-708d-43bc-8925-f1a171723ccb",
              "parentUUID": "3b5b454b-f9d4-4f29-952f-fc329d93dd93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add transaction",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success add transaction",
              "timedOut": false,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/purchases')\n    .send({\n        \"officeId\": officeId,\n        \"date\": \"2023-01-30\",\n        \"invoice\": \"INV/02/20/2023/001\",\n        \"amount\": 14000,\n        \"discount\": 0,\n        \"description\": \"test transaksi toko dwiky\",\n        \"items\": [\n            {\n                \"productId\": productId,\n                \"quantity\": 4,\n                \"cost\": 3500\n            }\n        ]\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('transaksi ditambahkan')\n        expect(response.body.data.purchaseId).not.to.be.null\n        purchaseId = response.body.data.purchaseId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "ce630e4e-17ee-4982-a809-6ee9d6dd57b2",
              "parentUUID": "3b5b454b-f9d4-4f29-952f-fc329d93dd93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get list of transaction",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get list of transaction",
              "timedOut": false,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/purchases/' + purchaseId)\n    .query({\n        startDate: \"2023-01-01\",\n        endDate: \"2023-12-31\"\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.purchase.date).not.to.be.null\n        expect(response.body.data.purchase.invoice).not.to.be.null\n        expect(response.body.data.purchase.description).not.to.be.null\n        expect(response.body.data.purchase.amount).not.to.be.null\n        expect(response.body.data.purchase.discount).not.to.be.null\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "ea51cda1-db7c-4b2b-9fb5-47506ec92e1b",
              "parentUUID": "3b5b454b-f9d4-4f29-952f-fc329d93dd93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get transaction detail",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get transaction detail",
              "timedOut": false,
              "duration": 1119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/purchases/' + purchaseId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.purchase.date).not.to.be.null\n        expect(response.body.data.purchase.invoice).not.to.be.null\n        expect(response.body.data.purchase.description).not.to.be.null\n        expect(response.body.data.purchase.amount).not.to.be.null\n        expect(response.body.data.purchase.discount).not.to.be.null\n        expect(response.body.data.purchase.description).to.be.equal('test transaksi toko dwiky')\n        expect(response.body.data.purchase.creator).to.be.equal('Toko Dwiky')\n        expect(response.body.data.purchase.office_name).to.be.equal('office-Toko Dwiky')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "e365b412-762f-4b4c-b996-da701391fb2b",
              "parentUUID": "3b5b454b-f9d4-4f29-952f-fc329d93dd93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21aed220-c910-4ce9-8394-af333bf6477a",
            "e204f025-cb4b-4481-b729-99b30fc659e9",
            "f6cb44b6-708d-43bc-8925-f1a171723ccb",
            "ce630e4e-17ee-4982-a809-6ee9d6dd57b2",
            "ea51cda1-db7c-4b2b-9fb5-47506ec92e1b",
            "e365b412-762f-4b4c-b996-da701391fb2b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1666,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}