{
  "stats": {
    "suites": 7,
    "tests": 39,
    "passes": 39,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-21T06:44:42.335Z",
    "end": "2023-06-21T06:44:49.170Z",
    "duration": 6835,
    "testsRegistered": 39,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "47274f40-f9e0-4bda-8073-4968c946521e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 610,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "request(baseUrl)\n    .post('/authentications')\n    .send(userLogin)\n    .end(function (err, res) {\n        token = res.body.data.accessToken\n        if (err) {\n            throw err\n        }\n        done()\n    })",
          "err": {},
          "uuid": "6f05b44f-b31b-4ab6-a539-6acac8688f1c",
          "parentUUID": "47274f40-f9e0-4bda-8073-4968c946521e",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "22a4fec6-082a-4c09-9973-e48b001d31b7",
          "title": "Test Endpoint Registration /registration and Login /authentications",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success create user registration",
              "fullTitle": "Test Endpoint Registration /registration and Login /authentications Success create user registration",
              "timedOut": false,
              "duration": 423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/registration')\n    .send(userRegistration)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Toko berhasil didaftarkan')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(userRegistration.name)\n        expect(response.body.data.email).not.to.be.null\n        expect(response.body.data.email).to.be.equal(userRegistration.email)\n        expect(response.body.data.password).not.to.be.null\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "e2406b96-c5e0-49a6-ab6e-3a207bf3bde9",
              "parentUUID": "22a4fec6-082a-4c09-9973-e48b001d31b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success login using valid credential",
              "fullTitle": "Test Endpoint Registration /registration and Login /authentications Success login using valid credential",
              "timedOut": false,
              "duration": 426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/authentications')\n    .send(userLogin)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Authentication berhasil ditambahkan')\n        expect(response.body.data.accessToken).not.to.be.null\n        expect(response.body.data.refreshToken).not.to.be.null\n        expect(response.body.data.user.id).not.to.be.null\n        expect(response.body.data.user.name).not.to.be.null\n        expect(response.body.data.user.name).to.be.equal(userRegistration.name)\n        expect(response.body.data.user.role).not.to.be.null\n        expect(response.body.data.user.role).to.be.equal('admin')\n        expect(response.body.data.user.email).not.to.be.null\n        expect(response.body.data.user.email).to.be.equal(userRegistration.email)\n        expect(response.body.data.user.company_name).not.to.be.null\n        expect(response.body.data.user.company_name).to.be.equal(userRegistration.name)\n        officeId = response.body.data.user.officeId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "6180b081-6fc2-4287-9e14-2f727adc8262",
              "parentUUID": "22a4fec6-082a-4c09-9973-e48b001d31b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Failed login using invalid credential",
              "fullTitle": "Test Endpoint Registration /registration and Login /authentications Failed login using invalid credential",
              "timedOut": false,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/authentications')\n    .send({\n        \"email\": \"tokonya@dwiky.com\",\n        \"password\": \"tokonyadwiky\"\n    })\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(401)\n        expect(response.body.status).to.be.equal('fail')\n        expect(response.body.message).to.be.equal('Kredensial yang Anda berikan salah')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "850a89e3-e555-4e26-a6fc-2df3843db2ee",
              "parentUUID": "22a4fec6-082a-4c09-9973-e48b001d31b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Failed login using invalid email format",
              "fullTitle": "Test Endpoint Registration /registration and Login /authentications Failed login using invalid email format",
              "timedOut": false,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/authentications')\n    .send({\n        \"email\": \"toko@dwiky\",\n        \"password\": \"toko24dwiky\"\n    })\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(400)\n        expect(response.body.status).to.be.equal('fail')\n        expect(response.body.message).to.be.equal('\\\"email\\\" must be a valid email')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "7b77e510-272f-4d6e-ab72-fe960f45a328",
              "parentUUID": "22a4fec6-082a-4c09-9973-e48b001d31b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Failed login without any input",
              "fullTitle": "Test Endpoint Registration /registration and Login /authentications Failed login without any input",
              "timedOut": false,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/authentications')\n    .send()\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(400)\n        expect(response.body.status).to.be.equal('fail')\n        expect(response.body.message).to.be.equal('\\\"value\\\" must be of type object')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "22125fa9-1ab2-488e-830b-f82f21093eac",
              "parentUUID": "22a4fec6-082a-4c09-9973-e48b001d31b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2406b96-c5e0-49a6-ab6e-3a207bf3bde9",
            "6180b081-6fc2-4287-9e14-2f727adc8262",
            "850a89e3-e555-4e26-a6fc-2df3843db2ee",
            "7b77e510-272f-4d6e-ab72-fe960f45a328",
            "22125fa9-1ab2-488e-830b-f82f21093eac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1168,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c95e7a0a-a958-4ccc-9bc1-a69dc89aee4e",
          "title": "Test Endpoint User /users",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success create user cashier",
              "fullTitle": "Test Endpoint User /users Success create user cashier",
              "timedOut": false,
              "duration": 428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/users')\n    .send(createUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil ditambahkan')\n        expect(response.body.data.userId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(createUser.name)\n        userId = response.body.data.userId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "79b8538a-fc39-429a-9b8f-928aa6f31c15",
              "parentUUID": "c95e7a0a-a958-4ccc-9bc1-a69dc89aee4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get user detail",
              "fullTitle": "Test Endpoint User /users Success get user detail",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/users/' + userId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.user.id).not.to.be.null\n        expect(response.body.data.user.name).not.to.be.null\n        expect(response.body.data.user.name).to.be.equal(createUser.name)\n        expect(response.body.data.user.email).not.to.be.null\n        expect(response.body.data.user.email).to.be.equal(createUser.email)\n        expect(response.body.data.user.role).not.to.be.null\n        expect(response.body.data.user.role).to.be.equal('kasir')\n        expect(response.body.status).to.be.equal('success')\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "89c7235a-bdef-4560-b4a0-8995408a0d72",
              "parentUUID": "c95e7a0a-a958-4ccc-9bc1-a69dc89aee4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get user list",
              "fullTitle": "Test Endpoint User /users Success get user list",
              "timedOut": false,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/users')\n    .query({\n        q: 'kasir',\n        p: 1\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "f3d759c8-8a1b-4562-b349-277d02506beb",
              "parentUUID": "c95e7a0a-a958-4ccc-9bc1-a69dc89aee4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update user",
              "fullTitle": "Test Endpoint User /users Success update user",
              "timedOut": false,
              "duration": 555,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/users/' + userId)\n    .send(updateUser)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateUser.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil diupdate')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "63a83a0e-216e-4c76-a726-6100ba40a2ad",
              "parentUUID": "c95e7a0a-a958-4ccc-9bc1-a69dc89aee4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete user",
              "fullTitle": "Test Endpoint User /users Success delete user",
              "timedOut": false,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/users/' + userId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('User berhasil dihapus')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "ef8d5011-3d28-47b6-8af8-26412d87030e",
              "parentUUID": "c95e7a0a-a958-4ccc-9bc1-a69dc89aee4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79b8538a-fc39-429a-9b8f-928aa6f31c15",
            "89c7235a-bdef-4560-b4a0-8995408a0d72",
            "f3d759c8-8a1b-4562-b349-277d02506beb",
            "63a83a0e-216e-4c76-a726-6100ba40a2ad",
            "ef8d5011-3d28-47b6-8af8-26412d87030e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1381,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bc8b9834-3227-4fd8-865d-35a97d0f31d6",
          "title": "Test Endpoint Unit /units",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add unit",
              "fullTitle": "Test Endpoint Unit /units Success add unit",
              "timedOut": false,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/units')\n    .send(addUnit)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Unit berhasil ditambahkan')\n        expect(response.body.data.unitId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addUnit.name)\n        unitId = response.body.data.unitId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "f4005c87-f199-42f8-b764-fbbd70f6e0a3",
              "parentUUID": "bc8b9834-3227-4fd8-865d-35a97d0f31d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get unit detail",
              "fullTitle": "Test Endpoint Unit /units Success get unit detail",
              "timedOut": false,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/units/' + unitId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.unit.name).not.to.be.null\n        expect(response.body.data.unit.name).to.be.equal(addUnit.name)\n        expect(response.body.data.unit.description).not.to.be.null\n        expect(response.body.data.unit.description).to.be.equal(addUnit.description)\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "c6d4eeb3-fcd2-46b1-bee0-60536d04665a",
              "parentUUID": "bc8b9834-3227-4fd8-865d-35a97d0f31d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get unit list",
              "fullTitle": "Test Endpoint Unit /units Success get unit list",
              "timedOut": false,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/units')\n    .query({\n        q: 'gram',\n        page: 1\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "b0e909a7-0158-4a34-ba7c-6a64f494987b",
              "parentUUID": "bc8b9834-3227-4fd8-865d-35a97d0f31d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update unit",
              "fullTitle": "Test Endpoint Unit /units Success update unit",
              "timedOut": false,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/units/' + unitId)\n    .send(updateUnit)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateUnit.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "88df0dd9-3e49-4642-9e2c-f675719ee5c4",
              "parentUUID": "bc8b9834-3227-4fd8-865d-35a97d0f31d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete unit",
              "fullTitle": "Test Endpoint Unit /units Success delete unit",
              "timedOut": false,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/units/' + unitId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "d8594663-2e1c-412a-93ed-109ee423cd97",
              "parentUUID": "bc8b9834-3227-4fd8-865d-35a97d0f31d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4005c87-f199-42f8-b764-fbbd70f6e0a3",
            "c6d4eeb3-fcd2-46b1-bee0-60536d04665a",
            "b0e909a7-0158-4a34-ba7c-6a64f494987b",
            "88df0dd9-3e49-4642-9e2c-f675719ee5c4",
            "d8594663-2e1c-412a-93ed-109ee423cd97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 705,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da5ea0a5-3449-450d-841b-47438a350b64",
          "title": "Test Endpoint Category /categories",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add category",
              "fullTitle": "Test Endpoint Category /categories Success add category",
              "timedOut": false,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/categories')\n    .send(addCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.data.categoryId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCategory.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Category berhasil ditambahkan')\n        categoryId = response.body.data.categoryId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "cb8b58f1-e08b-46b4-bb84-69e58db9fd58",
              "parentUUID": "da5ea0a5-3449-450d-841b-47438a350b64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get category detail",
              "fullTitle": "Test Endpoint Category /categories Success get category detail",
              "timedOut": false,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/categories/' + categoryId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.data.category.name).not.to.be.null\n        expect(response.body.data.category.name).to.be.equal(addCategory.name)\n        expect(response.body.data.category.description).not.to.be.null\n        expect(response.body.data.category.description).to.be.equal(addCategory.description)\n        expect(response.body.status).to.be.equal('success')\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "b3bf0912-233e-4fb6-b12b-d87f6117176a",
              "parentUUID": "da5ea0a5-3449-450d-841b-47438a350b64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get category list",
              "fullTitle": "Test Endpoint Category /categories Success get category list",
              "timedOut": false,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/categories')\n    .query({\n        page: 1,\n        q: 'makanan'\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "334335e1-36d3-437b-bfc9-c7c057e13d80",
              "parentUUID": "da5ea0a5-3449-450d-841b-47438a350b64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update category",
              "fullTitle": "Test Endpoint Category /categories Success update category",
              "timedOut": false,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/categories/' + categoryId)\n    .send(updateCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateCategory.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "865f5a0e-86f4-4ece-b38f-8236c7b03ca3",
              "parentUUID": "da5ea0a5-3449-450d-841b-47438a350b64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete category",
              "fullTitle": "Test Endpoint Category /categories Success delete category",
              "timedOut": false,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/categories/' + categoryId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "bb31570e-be35-4aa7-a9cf-c38c0a97e107",
              "parentUUID": "da5ea0a5-3449-450d-841b-47438a350b64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add category again",
              "fullTitle": "Test Endpoint Category /categories Success add category again",
              "timedOut": false,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/categories')\n    .send(addCategory)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.data.categoryId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCategory.name)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Category berhasil ditambahkan')\n        categoryId = response.body.data.categoryId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "ded76c5c-c2ea-40b7-97f1-4d9d53dcb946",
              "parentUUID": "da5ea0a5-3449-450d-841b-47438a350b64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb8b58f1-e08b-46b4-bb84-69e58db9fd58",
            "b3bf0912-233e-4fb6-b12b-d87f6117176a",
            "334335e1-36d3-437b-bfc9-c7c057e13d80",
            "865f5a0e-86f4-4ece-b38f-8236c7b03ca3",
            "bb31570e-be35-4aa7-a9cf-c38c0a97e107",
            "ded76c5c-c2ea-40b7-97f1-4d9d53dcb946"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 772,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f5564439-73ba-4a2e-92ce-bb9c5c076114",
          "title": "Test Endpoint Customer /customers",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add customer",
              "fullTitle": "Test Endpoint Customer /customers Success add customer",
              "timedOut": false,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/customers')\n    .send(addCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Customer berhasil ditambahkan')\n        expect(response.body.data.customerId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCustomer.name)\n        customerId = response.body.data.customerId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "4cdbd1d5-a44d-44ca-8a43-4efbbad66d4d",
              "parentUUID": "f5564439-73ba-4a2e-92ce-bb9c5c076114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get customer detail",
              "fullTitle": "Test Endpoint Customer /customers Success get customer detail",
              "timedOut": false,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/customers/' + customerId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.customer.name).not.to.be.null\n        expect(response.body.data.customer.name).to.be.equal(addCustomer.name)\n        expect(response.body.data.customer.phone).not.to.be.null\n        expect(response.body.data.customer.phone).to.be.equal(addCustomer.phone)\n        expect(response.body.data.customer.address).not.to.be.null\n        expect(response.body.data.customer.address).to.be.equal(addCustomer.address)\n        expect(response.body.data.customer.description).not.to.be.null\n        expect(response.body.data.customer.description).to.be.equal(addCustomer.description)\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "9c84b306-5cd8-4cb4-9807-2643bad5e1f0",
              "parentUUID": "f5564439-73ba-4a2e-92ce-bb9c5c076114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get customer list",
              "fullTitle": "Test Endpoint Customer /customers Success get customer list",
              "timedOut": false,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/customers')\n    .query({\n        page: 1,\n        q: 'Budi'\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "90b40cd3-8403-436d-9e58-a903df2ff8da",
              "parentUUID": "f5564439-73ba-4a2e-92ce-bb9c5c076114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update customer",
              "fullTitle": "Test Endpoint Customer /customers Success update customer",
              "timedOut": false,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/customers/' + customerId)\n    .send(updateCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(updateCustomer.name)\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "c91c4e23-04c9-456e-bcf0-07b6f1bfbbbb",
              "parentUUID": "f5564439-73ba-4a2e-92ce-bb9c5c076114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete customer",
              "fullTitle": "Test Endpoint Customer /customers Success delete customer",
              "timedOut": false,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/customers/' + customerId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "b74eccf8-9ce3-432b-be75-c72d60731fad",
              "parentUUID": "f5564439-73ba-4a2e-92ce-bb9c5c076114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add customer again",
              "fullTitle": "Test Endpoint Customer /customers Success add customer again",
              "timedOut": false,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/customers')\n    .send(addCustomer)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Customer berhasil ditambahkan')\n        expect(response.body.data.customerId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(addCustomer.name)\n        customerId = response.body.data.customerId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "6bde6499-7a23-418e-a242-4295a99fd2a0",
              "parentUUID": "f5564439-73ba-4a2e-92ce-bb9c5c076114",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4cdbd1d5-a44d-44ca-8a43-4efbbad66d4d",
            "9c84b306-5cd8-4cb4-9807-2643bad5e1f0",
            "90b40cd3-8403-436d-9e58-a903df2ff8da",
            "c91c4e23-04c9-456e-bcf0-07b6f1bfbbbb",
            "b74eccf8-9ce3-432b-be75-c72d60731fad",
            "6bde6499-7a23-418e-a242-4295a99fd2a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 664,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2c5556d4-0411-4e79-85be-d909628fe581",
          "title": "Test Endpoint Product /products",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add product",
              "fullTitle": "Test Endpoint Product /products Success add product",
              "timedOut": false,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/products')\n    .send({\n        category_id: categoryId,\n        code: \"A314ASDDFIER3432\",\n        name: \"taro\",\n        price: 3500,\n        cost: 3000,\n        stock: 5\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Product berhasil ditambahkan')\n        expect(response.body.data.productId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(\"taro\")\n        productId = response.body.data.productId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "00491960-ffd3-44bf-ae44-c08ead2c15c6",
              "parentUUID": "2c5556d4-0411-4e79-85be-d909628fe581",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get product detail",
              "fullTitle": "Test Endpoint Product /products Success get product detail",
              "timedOut": false,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/products/' + productId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.product.code).not.to.be.null\n        expect(response.body.data.product.name).not.to.be.null\n        expect(response.body.data.product.name).to.be.equal(\"taro\")\n        expect(response.body.data.product.price).not.to.be.null\n        expect(response.body.data.product.price).to.be.equal(3500)\n        expect(response.body.data.product.cost).not.to.be.null\n        expect(response.body.data.product.cost).to.be.equal(3000)\n        expect(response.body.data.product.stock).not.to.be.null\n        expect(response.body.data.product.stock).to.be.equal(5)\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "c4f4706d-5940-496b-b799-952eaf7e27e9",
              "parentUUID": "2c5556d4-0411-4e79-85be-d909628fe581",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get product list",
              "fullTitle": "Test Endpoint Product /products Success get product list",
              "timedOut": false,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/products')\n    .query({\n        page: 1,\n        q: \"taro\",\n        withStock: true,\n        withCategory: true,\n        categoryId: categoryId\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "55a3d40e-43a7-4f19-8098-f77773d60405",
              "parentUUID": "2c5556d4-0411-4e79-85be-d909628fe581",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success update product",
              "fullTitle": "Test Endpoint Product /products Success update product",
              "timedOut": false,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .put('/products/' + productId)\n    .send({\n        \"category_id\": categoryId,\n        \"code\": \"A314ASDDFIER3432\",\n        \"name\": \"taro\",\n        \"price\": 3500,\n        \"cost\": 3000,\n        \"stock\": 100\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal('taro')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "d8c264a1-e86c-4b6a-9a85-2c3b3622e960",
              "parentUUID": "2c5556d4-0411-4e79-85be-d909628fe581",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success delete product",
              "fullTitle": "Test Endpoint Product /products Success delete product",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .del('/products/' + productId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "aaa1181b-79bb-4d6d-9be1-f66f10b704f3",
              "parentUUID": "2c5556d4-0411-4e79-85be-d909628fe581",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add product again",
              "fullTitle": "Test Endpoint Product /products Success add product again",
              "timedOut": false,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/products')\n    .send({\n        category_id: categoryId,\n        code: \"A314ASDDFIER3432\",\n        name: \"taro\",\n        price: 3500,\n        cost: 3000,\n        stock: 50\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('Product berhasil ditambahkan')\n        expect(response.body.data.productId).not.to.be.null\n        expect(response.body.data.name).not.to.be.null\n        expect(response.body.data.name).to.be.equal(\"taro\")\n        productId = response.body.data.productId\n        productCode = response.body.data.code\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "4ff4da7d-b234-445d-b4be-374a0a908b12",
              "parentUUID": "2c5556d4-0411-4e79-85be-d909628fe581",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00491960-ffd3-44bf-ae44-c08ead2c15c6",
            "c4f4706d-5940-496b-b799-952eaf7e27e9",
            "55a3d40e-43a7-4f19-8098-f77773d60405",
            "d8c264a1-e86c-4b6a-9a85-2c3b3622e960",
            "aaa1181b-79bb-4d6d-9be1-f66f10b704f3",
            "4ff4da7d-b234-445d-b4be-374a0a908b12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 638,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c5646c02-f3a4-4360-b64a-89b0dddb8b4a",
          "title": "Test Endpoint Sales Order /sales and Transaction /purchases",
          "fullFile": "D:\\SANBERCODE\\QA-AUTOMATION\\TUGAS-API-AUTOMATION\\Tugas-API-Automation-Kasir-Aja\\test\\testKasirAjaAPI.js",
          "file": "\\test\\testKasirAjaAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success add sales",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success add sales",
              "timedOut": false,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/sales')\n    .send({\n        \"officeId\": officeId,\n        \"customerId\": customerId,\n        \"date\": \"2023-02-01\",\n        \"invoice\": \"INV001\",\n        \"amount\": 2000,\n        \"discount\": 0,\n        \"description\": \"Pembelian pertama\",\n        \"items\": [\n            {\n                \"productId\": productId,\n                \"quantity\": 1,\n                \"price\": 2000\n            }\n        ]\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('transaksi ditambahkan')\n        expect(response.body.data.saleId).not.to.be.null\n        saleId = response.body.data.saleId\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "8bb492ed-5982-4c96-85b2-7c5924d4f10f",
              "parentUUID": "c5646c02-f3a4-4360-b64a-89b0dddb8b4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get list sales data",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get list sales data",
              "timedOut": false,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/sales')\n    .query({\n        startDate: \"2023-01-01\",\n        endDate: \"2023-12-31\"\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "affa1cfa-ed70-43bd-bf87-0c7f1c72b0b3",
              "parentUUID": "c5646c02-f3a4-4360-b64a-89b0dddb8b4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get sales order data",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get sales order data",
              "timedOut": false,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/sales/' + saleId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        console.log(response.body)\n        done()\n    })",
              "err": {},
              "uuid": "55734d71-ea61-4c06-a176-ec6a36f4a948",
              "parentUUID": "c5646c02-f3a4-4360-b64a-89b0dddb8b4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success add transaction",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success add transaction",
              "timedOut": false,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .post('/purchases')\n    .send({\n        \"officeId\": officeId,\n        \"date\": \"2023-01-30\",\n        \"invoice\": \"INV/02/20/2023/001\",\n        \"amount\": 14000,\n        \"discount\": 0,\n        \"description\": \"test transaksi toko dwiky\",\n        \"items\": [\n            {\n                \"productId\": productId,\n                \"quantity\": 4,\n                \"cost\": 3500\n            }\n        ]\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(201)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.message).to.be.equal('transaksi ditambahkan')\n        expect(response.body.data.purchaseId).not.to.be.null\n        purchaseId = response.body.data.purchaseId\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "99a3fcf8-1f1a-4524-8328-866c153b9f48",
              "parentUUID": "c5646c02-f3a4-4360-b64a-89b0dddb8b4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get list of transaction",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get list of transaction",
              "timedOut": false,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/purchases/' + purchaseId)\n    .query({\n        startDate: \"2023-01-01\",\n        endDate: \"2023-12-31\"\n    })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.purchase.date).not.to.be.null\n        expect(response.body.data.purchase.invoice).not.to.be.null\n        expect(response.body.data.purchase.description).not.to.be.null\n        expect(response.body.data.purchase.amount).not.to.be.null\n        expect(response.body.data.purchase.discount).not.to.be.null\n        console.log(response.body)\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "f0bfbe01-c8c0-4b69-8df5-2b3f323eba70",
              "parentUUID": "c5646c02-f3a4-4360-b64a-89b0dddb8b4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Success get transaction detail",
              "fullTitle": "Test Endpoint Sales Order /sales and Transaction /purchases Success get transaction detail",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseUrl)\n    .get('/purchases/' + purchaseId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'bearer ' + token)\n    .end(function (err, response) {\n        expect(response.statusCode).to.be.equal(200)\n        expect(response.body.status).to.be.equal('success')\n        expect(response.body.data.purchase.date).not.to.be.null\n        expect(response.body.data.purchase.invoice).not.to.be.null\n        expect(response.body.data.purchase.description).not.to.be.null\n        expect(response.body.data.purchase.amount).not.to.be.null\n        expect(response.body.data.purchase.discount).not.to.be.null\n        expect(response.body.data.purchase.description).to.be.equal('test transaksi toko dwiky')\n        expect(response.body.data.purchase.creator).to.be.equal('Toko Dwiky')\n        expect(response.body.data.purchase.office_name).to.be.equal('office-Toko Dwiky')\n        console.log(JSON.stringify(response.body))\n        if (err) {\n            throw err\n        }\n        done()\n    })",
              "err": {},
              "uuid": "3b08f173-6f69-4e3a-96c3-77926ad2e5a6",
              "parentUUID": "c5646c02-f3a4-4360-b64a-89b0dddb8b4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8bb492ed-5982-4c96-85b2-7c5924d4f10f",
            "affa1cfa-ed70-43bd-bf87-0c7f1c72b0b3",
            "55734d71-ea61-4c06-a176-ec6a36f4a948",
            "99a3fcf8-1f1a-4524-8328-866c153b9f48",
            "f0bfbe01-c8c0-4b69-8df5-2b3f323eba70",
            "3b08f173-6f69-4e3a-96c3-77926ad2e5a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 773,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}